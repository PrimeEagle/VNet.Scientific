// ReSharper disable UnusedMember.Global

namespace VNet.Scientific.Noise.Other;
// Harmonic noise is characterized by the presence of noise components that are harmonically related to a fundamental frequency.
// It can arise from nonlinear distortion or interference in electrical or audio systems. Harmonic noise can be generated by introducing
// noise at specific harmonic frequencies.
public class HarmonicNoise : NoiseBase
{
    private double[] _frequencies;
    private double[] _amplitudes;

    public HarmonicNoise(IHarmonicNoiseAlgorithmArgs args) : base(args)
    {
        _frequencies = args.Frequencies;
        _amplitudes = args.Amplitudes;
    }

    public override double[] GenerateRaw()
    {
        int[] dimensions = Args.Dimensions;
        int numHarmonics = _frequencies.Length;

        double[] result = new double[GetTotalSize(dimensions)];

        for (int i = 0; i < GetTotalSize(dimensions); i++)
        {
            int[] indices = ConvertIndexToNDimensional(i, dimensions);

            double noiseValue = 0.0;
            for (int h = 0; h < numHarmonics; h++)
            {
                double frequency = _frequencies[h];
                double amplitude = _amplitudes[h];

                double phase = 2.0 * Math.PI * frequency * indices.Sum() / Args.SampleRate;
                noiseValue += amplitude * Math.Sin(phase);
            }

            result[i] = noiseValue * Args.Scale;
        }

        return result;
    }

    private int GetTotalSize(int[] dimensions)
    {
        return dimensions.Aggregate(1, (a, b) => a * b);
    }

    private int[] ConvertIndexToNDimensional(int index, int[] dimensions)
    {
        int[] indices = new int[dimensions.Length];
        for (int i = 0; i < dimensions.Length; i++)
        {
            indices[i] = index % dimensions[i];
            index /= dimensions[i];
        }
        return indices;
    }
}